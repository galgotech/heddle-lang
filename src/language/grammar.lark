start: program

program: (statement)*

statement: import_statement | workflow_definition
import_statement: "import" ESCAPED_STRING IDENTIFIER

workflow_definition: IDENTIFIER scope
scope: "{" (func_statement | let_statement)* scope_return? "}"
scope_return: let_read | dataframe

let_statement: "let" (IDENTIFIER | void_expression) "=" let_expression
let_expression: dataframe | pipeline_statement | let_read
void_expression: "_"

func_statement: "func" IDENTIFIER "=" import_use func_expression_config
func_expression_config: dict

pipeline_statement: (dataframe | workflow_let_read | let_read)? ("|" pipeline_merge_start? pipeline_function_handler pipeline_merge_end?)+ "?" pipeline_error_handler?
pipeline_type: "|"
pipeline_merge_start: ">"
pipeline_merge_end: "<"
pipeline_error_handler: IDENTIFIER "->" pipeline_error_body
pipeline_error_body: scope
pipeline_function_handler: import_use | func_use | prql  

workflow_let_read: IDENTIFIER "." IDENTIFIER
let_read: IDENTIFIER
import_use: IDENTIFIER "." IDENTIFIER
func_use: IDENTIFIER
prql: "(" PRQL_DEFINITION ")"

dataframe: "[" [dataframe_dict ("," dataframe_dict ","?)*] "]"
dataframe_dict: "{" [dataframe_pair ","? ("," dataframe_pair ","?)*] "}"
dataframe_pair: IDENTIFIER ":" dataframe_primitive
dataframe_primitive: ESCAPED_STRING
        | SIGNED_NUMBER
        | TRUE
        | FALSE
        | NULL

value: dict
        | list
        | ESCAPED_STRING
        | SIGNED_NUMBER
        | TRUE
        | FALSE
        | NULL
        | prql
list: "[" [value ","?("," value ","?)*] "]"
dict: "{" [pair ","?("," pair ","?)*] "}"
pair: IDENTIFIER ":" value

TRUE: "true"
FALSE: "false"
NULL: "null"
PRQL_DEFINITION: /[^)]+/
IDENTIFIER: /[a-zA-Z_][a-zA-Z0-9_]*/
COMMENT: /\/\/[^\n]*/

%import common.ESCAPED_STRING
%import common.SIGNED_NUMBER
%import common.WS -> WHITE_SPACE
%import common.NEWLINE

%ignore WHITE_SPACE
%ignore NEWLINE
%ignore COMMENT